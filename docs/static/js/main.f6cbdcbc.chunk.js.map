{"version":3,"sources":["components/AddMovie.tsx","components/MovieGridItem.tsx","helpers/getMovies.ts","hooks/useFetchMovies.ts","components/MovieGrid.tsx","MovieApp.tsx","index.tsx"],"names":["AddMovie","setQuery","useState","inputText","setInputText","onSubmit","e","preventDefault","handleSubmit","value","onChange","target","handleChange","className","type","placeholder","MovieGridItem","movie","poster","src","alt","title","nota","fechaEstreno","resumen","substr","getMovies","query","a","fetch","resp","json","results","movies","map","id","vote_average","overview","release_date","poster_path","backdrop","backdrop_path","useFetchMovies","data","loading","datosFetch","setDatosFetch","useEffect","then","setTimeout","MovieGrid","MovieApp","ReactDOM","render","document","getElementById"],"mappings":"uMAkCeA,EA5B2B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACtBC,mBAAS,IADa,mBACjDC,EADiD,KACtCC,EADsC,KAcxD,OACI,uBAAMC,SAAU,SAACC,GAAD,OAZC,SAACA,GAClBA,EAAEC,iBACFN,EAASE,GACTC,EAAa,IASSI,CAAaF,IAAnC,UACI,uBACIG,MAAQN,EACRO,SAAW,SAACJ,GAAD,OATF,SAACA,GAClBF,EAAaE,EAAEK,OAAOF,OAQGG,CAAaN,IAC9BO,UAAU,OACVC,KAAK,OACLC,YAAY,6BAEhB,gDCFGC,EApBqC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnD,OACI,qBAAKJ,UAAU,wBAAf,SAEsB,eAAjBI,EAAMC,QACH,sBAAKL,UAAU,gDAAf,UACI,qBAAKA,UAAU,8BAA8BM,IAAKF,EAAMC,OAAQE,IAAKH,EAAMI,QAC3E,6BAAKJ,EAAMI,QACX,uBAAOR,UAAU,yDAAjB,SAA2EI,EAAMK,OACjF,mBAAGT,UAAU,QAAb,SAAsBI,EAAMM,eAC5B,mBAAGV,UAAU,mBAAb,SAAiCI,EAAMO,QAAQC,OAAO,EAAG,IAAK,c,uBCP5EC,EAAS,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,4DACS,mCADT,SAGKC,MAAM,qDAAD,OAFD,mCAEC,kBAAsEF,IAHhF,cAGRG,EAHQ,gBAIYA,EAAKC,OAJjB,uBAINC,EAJM,EAINA,QAEFC,EAAsBD,EAAQE,KAAK,SAACjB,GACtC,MAAO,CACHkB,GAAIlB,EAAMkB,GACVd,MAAOJ,EAAMI,MACbC,KAAML,EAAMmB,aACZZ,QAASP,EAAMoB,SACfd,aAAcN,EAAMqB,aACpBpB,OAAQD,EAAMsB,YAAN,0CACiCtB,EAAMsB,aACzC,aAENC,SAAUvB,EAAMwB,cAAN,0CAC+BxB,EAAMwB,eACzC,mBAnBA,kBAuBPR,GAvBO,4CAAH,sDCsBAS,EAxBQ,SAAEf,GAAoB,IAAD,EACJzB,mBAAwB,CACxDyC,KAAM,GACNC,SAAS,IAH2B,mBACjCC,EADiC,KACrBC,EADqB,KAqBxC,OAfAC,qBAAW,WACJF,EAAWF,KAAK,IACfG,EAAe,CAAEH,KAAM,GAAIC,SAAS,IAGxClB,EAAUC,GACLqB,MAAM,SAACf,GAAD,OACHgB,YAAY,WACRH,EAAc,CACZH,KAAMV,EAAQW,SAAS,MAE1B,UAEZ,CAACjB,IAEGkB,GCDIK,EArB6B,SAAC,GAAe,IAAbvB,EAAY,EAAZA,MAAY,EAE7Be,EAAgBf,GAAlCiB,EAF+C,EAE/CA,QAASD,EAFsC,EAEtCA,KAEjB,OACI,gCACI,6BAAKhB,IACJiB,GAAW,oBACZ,qBAAK/B,UAAU,wBAAf,SACM8B,EAAKT,KAAI,SAAAjB,GACP,MACqB,eAAjBA,EAAMC,QACF,cAAC,EAAD,CAA8BD,MAAOA,GAAjBA,EAAMkB,aCDvCgB,EAbY,WAAO,IAAD,EACHjD,mBAAS,UADN,mBACtByB,EADsB,KACf1B,EADe,KAG7B,OACI,sBAAKY,UAAU,oBAAf,UACI,0CACA,cAAC,EAAD,CAAUZ,SAAUA,IAEpB,cAAC,EAAD,CAAW0B,MAAOA,Q,YCP9ByB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f6cbdcbc.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\ninterface AddMovieProps {\r\n    setQuery: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst AddMovie: React.FC<AddMovieProps> = ( {setQuery} ) => {\r\n    const [inputText, setInputText] = useState('');\r\n\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setQuery(inputText);\r\n        setInputText('');\r\n    }\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputText(e.target.value)\r\n    }\r\n    \r\n\r\n    return (\r\n        <form onSubmit={(e)=> handleSubmit(e) } >\r\n            <input \r\n                value={ inputText }                    \r\n                onChange={ (e)=> handleChange(e) }\r\n                className='mr-8' \r\n                type='text' \r\n                placeholder='¡Busca tu película'\r\n            />\r\n            <button>Buscar</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddMovie;\r\n","import { MovieItem } from \"../helpers/getMovies\"\r\n\r\ninterface MovieGridItemProps {\r\n    movie: MovieItem;\r\n}\r\n\r\n\r\nconst MovieGridItem: React.FC<MovieGridItemProps> = ( {movie} ) => {\r\n    return (\r\n        <div className='gridImages grid gap-8'>\r\n\r\n            {movie.poster !== 'Sin poster' && (\r\n                <div className='movieItem text-center p-5 bg-white rounded-md'>\r\n                    <img className='u-max-full-width rounded-xl' src={movie.poster} alt={movie.title}/>\r\n                    <h5>{movie.title}</h5>\r\n                    <small className='nota bg-yellow-400 p-3 rounded-full font-bold text-2xl'>{movie.nota}</small>\r\n                    <p className='-ml-2'>{movie.fechaEstreno}</p>\r\n                    <p className='descripcion mb-2'>{movie.resumen.substr(0, 80)+ '...'}</p>\r\n                </div>\r\n\r\n            )}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieGridItem\r\n","interface MovieItem {\r\n    id: string,\r\n    title: string,\r\n    nota: number,\r\n    resumen: string,\r\n    fechaEstreno: string,\r\n    poster: string,\r\n    backdrop: string\r\n}\r\n\r\nconst getMovies = async (query: string) => {\r\n    const apiKey: string = '594939a196832017634a0d7b0271311b' ;\r\n\r\n    const resp = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`);\r\n    const { results } = await resp.json();\r\n    \r\n    const movies: MovieItem[] = results.map( (movie: any): MovieItem => {\r\n        return {\r\n            id: movie.id,\r\n            title: movie.title,\r\n            nota: movie.vote_average,\r\n            resumen: movie.overview,\r\n            fechaEstreno: movie.release_date,\r\n            poster: movie.poster_path \r\n                ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\r\n                : 'Sin poster',\r\n\r\n            backdrop: movie.backdrop_path \r\n                ? `https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`\r\n                : 'Sin backdrop',\r\n\r\n        }\r\n    } )\r\n    return movies;\r\n\r\n}\r\nexport type { MovieItem };\r\nexport { getMovies };","import { useState, useEffect } from 'react';\r\nimport { getMovies, MovieItem } from '../helpers/getMovies';\r\n\r\ninterface useFetchState {\r\n    data: MovieItem[];\r\n    loading: boolean;\r\n}\r\n\r\nconst useFetchMovies = ( query: string ) => {\r\n    const [datosFetch, setDatosFetch] = useState<useFetchState>({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n        if(datosFetch.data[0]){\r\n            setDatosFetch( { data: [], loading: true } )\r\n        }\r\n\r\n        getMovies(query)\r\n            .then( (movies) =>\r\n                setTimeout( ()=> {\r\n                    setDatosFetch({ \r\n                      data: movies, loading: false \r\n                    });\r\n                }, 2000 ))\r\n\r\n    }, [query] )\r\n\r\n    return datosFetch;\r\n}\r\n\r\nexport default useFetchMovies\r\n","import MovieGridItem from './MovieGridItem';\r\nimport useFetchMovies from './../hooks/useFetchMovies';\r\n\r\ninterface MovieGridProps {\r\n    query: string;\r\n}\r\n\r\nconst MovieGrid: React.FC<MovieGridProps> = ( {query} ) => {\r\n    \r\n    const { loading, data } = useFetchMovies( query );\r\n\r\n    return (\r\n        <div>\r\n            <h4>{query}</h4>\r\n            {loading && 'Cargando datos...'}\r\n            <div className='gridImages grid gap-8'>\r\n                { data.map(movie => {\r\n                    return (\r\n                        movie.poster !== 'Sin poster' && (\r\n                            <MovieGridItem key={movie.id} movie={movie} />\r\n                        )\r\n                    )\r\n                }) }\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieGrid\r\n","import { useState } from \"react\";\nimport AddMovie from './components/AddMovie';\nimport MovieGrid from './components/MovieGrid';\n// import AddMovieClass from './components/AddMovieClass';\n\nconst MovieApp: React.FC = () => {\n    const [query, setQuery] = useState('Matrix');\n\n    return (\n        <div className='mt-24 text-center'>\n            <h1>MovieApp</h1>\n            <AddMovie setQuery={setQuery} />    \n            {/* <AddMovieClass setQuery={setQuery} /> */}\n            <MovieGrid query={query} />        \n        </div>\n    );\n}\n\nexport default MovieApp;\n","import ReactDOM from 'react-dom';\nimport MovieApp from './MovieApp';\n\nimport './styles/mine.css';\nimport './index.css';\n\nReactDOM.render(\n    <MovieApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}